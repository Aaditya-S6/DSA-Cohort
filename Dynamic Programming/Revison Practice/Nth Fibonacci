import java.util.*;
// Given a positive integer n, find the nth fibonacci number. Since the answer can be very large, return the answer modulo 1000000007.

// Example 1:

// Input: n = 2
// Output: 1 
// Explanation: 1 is the 2nd number
// of fibonacci series.
// Example 2:

// Input: n = 5
// Output: 5
// Explanation: 5 is the 5th number
// of fibonacci series.
public static void main(String[] args) {
    return nthFibo(3, new HashMap<Integer,Integer>());

}
public static int nthFibo(int n,HashMap<Inetger,Integer> memo){
    if(n==0){
        return 0;
    }
    if(n==1){
        return 1;
    }
    int currentKey=n;
    if memo.contains(currentKey){
        return memo.get(currentKey);
    }
    int first=nthFibo(n-1);
    int second=nthFibo(n-2);
    memo.put(currentKey,first+second);
    return memo.get(currentKey);
}
