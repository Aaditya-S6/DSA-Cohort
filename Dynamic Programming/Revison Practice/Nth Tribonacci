import java.util.*;
// The Tribonacci sequence Tn is defined as follows: 

// T0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.

// Given n, return the value of Tn.

 

// Example 1:

// Input: n = 4
// Output: 4
// Explanation:
// T_3 = 0 + 1 + 1 = 2
// T_4 = 1 + 1 + 2 = 4
// Example 2:

// Input: n = 25
// Output: 1389537

public static void main(String[] args) {
    int n=5;
    return NthTribo(n,new HashMap<Integer,Integer>())
    
}
public static int NthTribo(int n,HashMap<Integer,Integer> memo){
    if(n==0){
        return 0;
    }
    if(n==1 || n==2){
        return 1;
    }
    int currentKey=n;
    if(memo.contains(currentKey)){
        return memo.get(currentKey);
    }
    int first=NthTribo(n);
    int second=NthTribo(n-1);
    int third=NthTribo(n-2);
    memo.put(currentKey,first+second+third);
    return first+second+third;
 