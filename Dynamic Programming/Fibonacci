// The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

// F(0) = 0, F(1) = 1
// F(n) = F(n - 1) + F(n - 2), for n > 1.
// Given n, calculate F(n).

 

// Example 1:

// Input: n = 2
// Output: 1
// Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.
// Example 2:

// Input: n = 3
// Output: 2
// Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.
class Solution {
    public int fib(int n) {
        return myfun(n,new HashMap<Integer,Integer>());
        
    }
    private int myfun(int n,HashMap<Integer,Integer> Memo){
        if(n==0)
            return 0;
        if(n==1)
            return 1;
        int newN=n;
        if(Memo.containsKey(newN))
            return Memo.get(newN);
        
        int a=myfun(n-1,Memo);
        int b=myfun(n-2,Memo);
        Memo.put(newN,a+b);
        return a+b;
        
    }
}