
// The Tribonacci sequence Tn is defined as follows: 

// T0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.

// Given n, return the value of Tn.

 

// Example 1:

// Input: n = 4
// Output: 4
// Explanation:
// T_3 = 0 + 1 + 1 = 2
// T_4 = 1 + 1 + 2 = 4
class Solution{   
    public int tribonacci(int n) {
        HashMap<Integer,Integer> memo=new HashMap<>();
        return nthTribonacci(n,memo);
        
    }
    public static int nthTribonacci(int n,HashMap<Integer,Integer> memo){
     if(n==1 || n==2){
         return 1;
     }
     if(n==0){
         return 0;
     }
     int currentKey=n;
     if(memo.containsKey(currentKey)){
         return memo.get(currentKey);
     }
     int first=nthTribonacci(n-1,memo);
     int second=nthTribonacci(n-2,memo);
     int third=nthTribonacci(n-3,memo);
     memo.put(currentKey,first+second+third);
     return first+second+third;


    }
}